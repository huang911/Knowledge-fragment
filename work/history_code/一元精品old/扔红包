
const BOUNCETIME = 5.5 // 扔红包持续时间

Component({
  externalClasses: ['custom-class'],

  options: {
    addGlobalClass: true,
  },

  properties: {
    originPosition: { // 红包初始位置
      type: Object,
      value: {
        left: 60,
        bottom: 108
      }
    }
  },

  data: {
  },

  lifetimes: {
    ready () {
      this.showBounceCoin()
    }
  },

  methods: {
    showBounceCoin () {
      setInterval(() => {
        this.setData({ bounceAnimation: this.getBounceCoinAnimation() })
      }, 3000)
      this.setData({ bounceAnimation: this.getBounceCoinAnimation() })
    },

    getBounceCoinAnimation () {
      const { left: LEFT, bottom: BOTTOM } = this.properties.originPosition
      let animation = wx.createAnimation({
        duration: BOUNCETIME * 1000,
        timingFunction: 'linear',
        delay: 0,
      });
      const v = 60; // 初始化速度
      const angle = 80; // 速度垂直方向角度
      const theta = (angle * Math.PI) / 180; // 垂直方向角度对应弧度
      const g = -9.8; // 重力加速度
      let t = 0; // 初始化时间为0；
      const vx = (Math.cos(theta) * v); // 水平方向速度分量
      const vy = (Math.sin(theta) * v) - ((-g) * t); // 垂直方向速度分量
      let x, y;
      console.log('theta', theta)
      // 生成动画帧
      while (t < BOUNCETIME) {
        x = (vx * t) + LEFT;
        y = (vy * t) + (0.25 * (g) * Math.pow(t, 2)) + 20;
        console.log(x, y)
        if (y < 0) {
          y = 0;
        }

        animation.left(x).bottom(y).step({ duration: 20 }) // 更新坐标
        t = t + 0.1;
      }
      return animation.export()
    },
  }
})